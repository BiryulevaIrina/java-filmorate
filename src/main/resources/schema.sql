DROP TABLE IF EXISTS mpa_ratings CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS films_genres CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS likes CASCADE;


CREATE TABLE IF NOT EXISTS mpa_ratings (
    id_mpa_rating    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name             VARCHAR(55) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
    id_film          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name             VARCHAR(40) NOT NULL,
    description      VARCHAR(200),
    release_date     DATE    NOT NULL,
    duration         INTEGER NOT NULL,
    id_mpa_rating    INTEGER NOT NULL REFERENCES mpa_ratings (id_mpa_rating)
);

CREATE TABLE IF NOT EXISTS genres
(
    id_genre INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films_genres
(
    id_film  INTEGER  NOT NULL REFERENCES films (id_film),
    id_genre INTEGER NOT NULL REFERENCES genres (id_genre)
);

CREATE TABLE IF NOT EXISTS users
(
    id_user  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(55) NOT NULL UNIQUE,
    login    VARCHAR(55) NOT NULL UNIQUE,
    name     VARCHAR(55),
    birthday date
);

CREATE TABLE IF NOT EXISTS friends
(
    id_user    INTEGER NOT NULL REFERENCES users (id_user),
    id_friend  INTEGER NOT NULL REFERENCES users (id_user),
    status     BOOL NOT NULL
);

CREATE TABLE IF NOT EXISTS likes
(
    id_film    INTEGER NOT NULL REFERENCES films (id_film),
    id_user    INTEGER NOT NULL REFERENCES users (id_user)
);